{"ast":null,"code":"import axios from \"axios\";\nlet token = process.env.REACT_APP_ENDPOINT;\nexport default {\n  state: {\n    endpoint: \"https://cashiet-server.herokuapp.com/api/v1\",\n    user: null,\n    token: null\n  },\n\n  post(data) {\n    return new Promise((resolve, reject) => {\n      axios.post(this.state.endpoint + data.endpoint, data.details, {\n        headers: {\n          Authorization: 'Bearer ' + this.state.token\n        }\n      }).then(data => {\n        resolve(data);\n      }).catch(error => {\n        // context.dispatch('handleError', error);\n        reject(error);\n      });\n    });\n  },\n\n  get(url) {\n    return new Promise((resolve, reject) => {\n      axios.get(this.state.endpoint + url, {\n        headers: {\n          Authorization: 'Bearer ' + this.state.token\n        }\n      }).then(data => {\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n\n  handleError() {}\n\n};","map":{"version":3,"names":["axios","token","process","env","REACT_APP_ENDPOINT","state","endpoint","user","post","data","Promise","resolve","reject","details","headers","Authorization","then","catch","error","get","url","handleError"],"sources":["/Users/pelumi/Documents/GitHub/cashiet-frontend/src/services/http-service.js"],"sourcesContent":["import axios from \"axios\";\n\nlet token = process.env.REACT_APP_ENDPOINT;\n\nexport default {\n\n    state: {\n        endpoint: \"https://cashiet-server.herokuapp.com/api/v1\",\n        user: null,\n        token: null\n    },\n    post(data){\n        return  new Promise((resolve, reject) => {\n            axios.post(this.state.endpoint + data.endpoint, data.details, {\n                headers: { Authorization: 'Bearer ' + this.state.token,\n                }\n            })\n            .then((data)=>{\n                resolve(data);\n            })\n            .catch((error)=>{\n                // context.dispatch('handleError', error);\n                reject(error);\n            })\n        });\n    },\n    get(url){\n        return new Promise((resolve, reject) => {\n            axios.get(this.state.endpoint + url, {\n                headers: {\n                    Authorization: 'Bearer ' + this.state.token,\n                },\n            })\n            .then((data)=>{\n                resolve(data);\n            })\n            .catch((error)=>{\n                reject(error);\n            })\n        });\n    },\n\n    handleError(){\n        \n    }\n\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AAEA,eAAe;EAEXC,KAAK,EAAE;IACHC,QAAQ,EAAE,6CADP;IAEHC,IAAI,EAAE,IAFH;IAGHN,KAAK,EAAE;EAHJ,CAFI;;EAOXO,IAAI,CAACC,IAAD,EAAM;IACN,OAAQ,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACrCZ,KAAK,CAACQ,IAAN,CAAW,KAAKH,KAAL,CAAWC,QAAX,GAAsBG,IAAI,CAACH,QAAtC,EAAgDG,IAAI,CAACI,OAArD,EAA8D;QAC1DC,OAAO,EAAE;UAAEC,aAAa,EAAE,YAAY,KAAKV,KAAL,CAAWJ;QAAxC;MADiD,CAA9D,EAICe,IAJD,CAIOP,IAAD,IAAQ;QACVE,OAAO,CAACF,IAAD,CAAP;MACH,CAND,EAOCQ,KAPD,CAOQC,KAAD,IAAS;QACZ;QACAN,MAAM,CAACM,KAAD,CAAN;MACH,CAVD;IAWH,CAZO,CAAR;EAaH,CArBU;;EAsBXC,GAAG,CAACC,GAAD,EAAK;IACJ,OAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCZ,KAAK,CAACmB,GAAN,CAAU,KAAKd,KAAL,CAAWC,QAAX,GAAsBc,GAAhC,EAAqC;QACjCN,OAAO,EAAE;UACLC,aAAa,EAAE,YAAY,KAAKV,KAAL,CAAWJ;QADjC;MADwB,CAArC,EAKCe,IALD,CAKOP,IAAD,IAAQ;QACVE,OAAO,CAACF,IAAD,CAAP;MACH,CAPD,EAQCQ,KARD,CAQQC,KAAD,IAAS;QACZN,MAAM,CAACM,KAAD,CAAN;MACH,CAVD;IAWH,CAZM,CAAP;EAaH,CApCU;;EAsCXG,WAAW,GAAE,CAEZ;;AAxCU,CAAf"},"metadata":{},"sourceType":"module"}